
Description: >
  Samasa / CloudFormation script for Bastion setup

Parameters:
  EnvironmentName:
    Description: Prefix to identify connected resources
    Type: String

Resources:
  # - -
  # IAM Roles
  # - -
  SamasaBastionIAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess

  # - -
  # IAM Profiles
  # - -
  SamasaBastionIAMProfile:
    Type: AWS::IAM::InstanceProfile
    DependsOn: SamasaBastionIAMRole
    Properties: 
      Roles:
        - Ref: SamasaBastionIAMRole

  # - -
  # Security Groups
  # - -
  SamasaBastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for instance hosting Jenkins and serving as deployment station for Kubernetes cluster
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  # - -
  # EC2 Instances
  # - -
  SamasaBastion:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: SamasaBastion
      IamInstanceProfile: !Ref SamasaBastionIAMProfile
      ImageId: ami-003634241a8fcdec0 
      InstanceType: t2.micro
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeviceIndex: 0
        GroupSet:
        - Ref: SamasaBastionSecurityGroup
        SubnetId:
          Fn::ImportValue:
            !Sub ${EnvironmentName}-PUB-SN1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Bastion
      UserData: !Base64 |
        #!/bin/bash
        sudo apt update -y
        sudo apt install python-pip -y
        sudo apt install pylint -y
        echo "- - - - - - - Installing Jenkins & Dependencies - - - - - - -"
        wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
        sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
        sudo apt update -y
        sudo apt install default-jre -y
        sudo apt install default-jdk -y
        sudo apt install jenkins -y
        sudo systemctl start jenkins
        echo "- - - - - - - Installing Docker - - - - - - -"
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt install docker-ce -y
        sudo systemctl start docker
        echo "- - - - - - - Elevating Jenkins User - - - - - - - - -"
        sudo usermod -aG users jenkins
        sudo usermod -aG docker jenkins
        sudo systemctl restart jenkins
        echo "- - - - - - - Installing Hadolint - - - - - - -"
        wget https://github.com/hadolint/hadolint/releases/download/v1.18.0/hadolint-Linux-x86_64
        sudo mv hadolint-Linux-x86_64 hadolint
        sudo mv hadolint /usr/local/bin
        sudo chmod +x /usr/local/bin/hadolint
        echo "- - - - - - - Installing Kubectl - - - - - - -"
        curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.17.7/2020-07-08/bin/linux/amd64/kubectl
        sudo chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin
        echo "- - - - - - - All Done - - - - - - -"

Outputs:
  # - - Bastion Public IP - -
  BastionPublicIP:
    Value: !GetAtt SamasaBastion.PublicIp
    Description: Public IP to SSH into Bastion