
Description: >
  Samasa / CloudFormation script for basic server setup

Parameters:
  EnvironmentName:
    Description: Prefix to identify connected resources
    Type: String

Resources:
  # - -
  # IAM Roles
  # - -
  SamasaClusterIAM:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - eks.amazonaws.com
          Action:
          - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy

  # - -
  # Security Groups
  # - -
  SamasaBastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for instance hosting Jenkins and serving as deployment station for Kubernetes cluster
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  SamasaClusterSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EKS cluster
      VpcId:
        Fn::ImportValue:
          !Sub ${EnvironmentName}-VPCID
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  # - -
  # EC2 Instances
  # - -
  SamasaBastion:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: SamasaBastion
      ImageId: ami-003634241a8fcdec0 
      InstanceType: t2.micro
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeviceIndex: 0
        GroupSet:
        - Ref: SamasaBastionSecurityGroup
        SubnetId:
          Fn::ImportValue:
            !Sub ${EnvironmentName}-PUB-SN1
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-Bastion
      UserData: !Base64 |
        #!/bin/bash
        sudo apt update -y
        sudo apt install python-pip -y
        sudo apt install pylint -y
        echo "- - - - - - - Installing Jenkins & Dependencies - - - - - - -"
        wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -
        sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'
        sudo apt update -y
        sudo apt install default-jre -y
        sudo apt install default-jdk -y
        sudo apt install jenkins -y
        sudo systemctl start jenkins
        echo "- - - - - - - Installing Docker - - - - - - -"
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
        sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
        sudo apt install docker-ce -y
        sudo systemctl start docker
        echo "- - - - - - - Elevating Jenkins User - - - - - - - - -"
        sudo usermod -aG users jenkins
        sudo usermod -aG docker jenkins
        sudo systemctl restart jenkins
        echo "- - - - - - - Installing AWS CLI - - - - - - -"
        sudo apt install awscli -y
        echo "- - - - - - - Installing Hadolint - - - - - - -"
        wget https://github.com/hadolint/hadolint/releases/download/v1.18.0/hadolint-Linux-x86_64
        sudo mv hadolint-Linux-x86_64 hadolint
        sudo mv hadolint /usr/local/bin
        sudo chmod +x /usr/local/bin/hadolint
        echo "- - - - - - - Installing Kops - - - - - - -"
        curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
        chmod +x kops-linux-amd64
        sudo mv kops-linux-amd64 /usr/local/bin/kops
        echo "- - - - - - - All Done - - - - - - -"

  # - -
  # EKS Cluster
  # - -
  SamasaCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: SamasaCluster
      RoleArn: !GetAtt SamasaClusterIAM.Arn
      ResourcesVpcConfig:
        SecurityGroupIds:
          - !Ref SamasaClusterSecurityGroup
        SubnetIds:
          - Fn::ImportValue:
              !Sub ${EnvironmentName}-PRI-SN1
          - Fn::ImportValue:
              !Sub ${EnvironmentName}-PRI-SN2



  # - -
  # S3 Buckets
  # - -
  SamasaKopsBucket:
    Type: AWS::S3::Bucket
    # DeletionPolicy: Retain
    Properties:
      BucketName: samasa-kops-bucket
      VersioningConfiguration:
        Status: Enabled

Outputs:
  # - - Bastion Public IP - -
  BastionPublicIP:
    Value: !GetAtt SamasaBastion.PublicIp
    Description: Public IP to SSH into Bastion